Decidit Aasimar – Survival Game with Custom Engine
-Language: C#
-Paradigm: Object-Oriented Programming (OOP)
-Engine: Custom 2D engine provided by the university course
-Type: Academic project – Universidad Argentina de la Empresa (UADE) – OOP course

Description
This project was developed as the final assignment for the Object-Oriented Programming course at UADE. It is a survival-style game built on top of a custom 2D engine provided by the course instructors.
The game showcases the application of advanced OOP concepts and multiple design patterns. It features a modular architecture and gameplay systems including:

-State-driven game flow (menu, gameplay, victory, game over)
-AI enemies with wave progression
-Experience and upgrade system
-Event-driven UI with health/EXP bars and upgrade selector
-Custom collision logic and real-time rendering

Design Patterns Implemented
-Singleton: Global managers (GameManager, AudioManager, TextManager)

-Factory / Abstract Factory: Enemy and wave creation (EnemyFactory, WaveFactory)

-State: Game state transitions (MainMenuState, PlayState, etc.)

-Template Method: Base wave structure (Wave.cs) with overrides

-Observer: Player and enemy events (OnDamageTaken, OnDeath, OnExperienceChanged)

-Strategy (Emergent): Different enemy behaviors and upgrades

-Game Loop: Core engine update and render cycle

Project Architecture
*Game.Core: Custom engine layer (input, rendering, audio, core classes)

*Game.Scripts: Game-specific logic (states, waves, upgrades, gameplay)

*Game.Managers: High-level controllers (UI, objects, audio, game flow)
